#
# Source files: DO NOT EDIT THIS FILE: edit CMakeListsLocal.txt instead.
#
#

SET (LOCAL_LIBRARY_BASENAME vtkEMAtlasBrainClassifier)

INCLUDE (${VTKEMATLASBRAINCLASSIFIER_SOURCE_DIR}/cxx/CMakeListsLocal.txt)

# --------------------------------------------------------------------------
# You probably do not need to modify anything below this line

#
# Create the vtkEMAtlasBrainClassifier C++ library
#
# (Doesn't work here because of a CMake bug)
# ADD_LIBRARY (vtkEMAtlasBrainClassifier ${LOCAL_MODULE_SRCS})

#
# Create the vtkEMAtlasBrainClassifier Tcl library
#

IF (VTK_WRAP_TCL AND VTKEMATLASBRAINCLASSIFIER_WRAP_TCL)

  VTK_WRAP_TCL (vtkEMAtlasBrainClassifierTCL EMAtlasBrainClassifierTCL_SRCS ${LOCAL_MODULE_SRCS})
  ADD_LIBRARY (vtkEMAtlasBrainClassifierTCL ${EMAtlasBrainClassifierTCL_SRCS})
  TARGET_LINK_LIBRARIES (vtkEMAtlasBrainClassifierTCL 
                         vtkEMAtlasBrainClassifier
                         vtkIOTCL 
                         vtkGraphicsTCL 
                         vtkImagingTCL 
                         vtkFilteringTCL 
                         vtkCommonTCL
                         ${TCL_LIBRARY})
  IF (VTK_USE_HYBRID)
    TARGET_LINK_LIBRARIES (vtkEMAtlasBrainClassifierTCL vtkHybridTCL)
  ENDIF (VTK_USE_HYBRID)

  IF (VTK_USE_PARALLEL)
    TARGET_LINK_LIBRARIES (vtkEMAtlasBrainClassifierTCL vtkParallelTCL)
  ENDIF (VTK_USE_PARALLEL)

  IF (VTK_USE_PATENTED)
    TARGET_LINK_LIBRARIES (vtkEMAtlasBrainClassifierTCL vtkPatentedTCL)
  ENDIF (VTK_USE_PATENTED)

  IF (VTK_USE_RENDERING)
    TARGET_LINK_LIBRARIES (vtkEMAtlasBrainClassifierTCL vtkRenderingTCL)
  ENDIF (VTK_USE_RENDERING)

ENDIF (VTK_WRAP_TCL AND VTKEMATLASBRAINCLASSIFIER_WRAP_TCL)

#
# Create the vtkEMAtlasBrainClassifier Python library
#

IF (VTK_WRAP_PYTHON AND VTKEMATLASBRAINCLASSIFIER_WRAP_PYTHON)

  VTK_WRAP_PYTHON (vtkEMAtlasBrainClassifierPython EMAtlasBrainClassifierPython_SRCS ${LOCAL_MODULE_SRCS})

  IF (APPLE)
    ADD_LIBRARY (vtkEMAtlasBrainClassifierPython MODULE ${EMAtlasBrainClassifierPython_SRCS})
  ELSE (APPLE)
    ADD_LIBRARY (vtkEMAtlasBrainClassifierPython SHARED ${EMAtlasBrainClassifierPython_SRCS})
  ENDIF (APPLE)

  IF (WIN32)
    TARGET_LINK_LIBRARIES (vtkEMAtlasBrainClassifierPython 
                           vtkEMAtlasBrainClassifier
                           vtkIOPython
                           vtkGraphicsPython
                           vtkImagingPython
                           vtkFilteringPython
                           vtkCommonPython
                           debug ${PYTHON_DEBUG_LIBRARY} 
                           optimized ${PYTHON_LIBRARY})
  ELSE (WIN32)
    TARGET_LINK_LIBRARIES (vtkEMAtlasBrainClassifierPython 
                           vtkEMAtlasBrainClassifierPython 
                           vtkIOPython
                           vtkGraphicsPython
                           vtkImagingPython
                           vtkFilteringPython
                           vtkCommonPython
                           ${PYTHON_LIBRARY})
  ENDIF (WIN32)

  IF (VTK_USE_HYBRID)
    TARGET_LINK_LIBRARIES (vtkEMAtlasBrainClassifierPython vtkHybridPython)
  ENDIF (VTK_USE_HYBRID)

  IF (VTK_USE_PARALLEL)
    TARGET_LINK_LIBRARIES (vtkEMAtlasBrainClassifierPython vtkParallelPython)
  ENDIF (VTK_USE_PARALLEL)

  IF (VTK_USE_PATENTED)
    TARGET_LINK_LIBRARIES (vtkEMAtlasBrainClassifierPython vtkPatentedPython)
  ENDIF (VTK_USE_PATENTED)

  IF (VTK_USE_RENDERING)
    TARGET_LINK_LIBRARIES (vtkEMAtlasBrainClassifierPython vtkRenderingPython)
  ENDIF (VTK_USE_RENDERING)

ENDIF (VTK_WRAP_PYTHON AND VTKEMATLASBRAINCLASSIFIER_WRAP_PYTHON)

#
# Create the vtkEMAtlasBrainClassifier Java library
#

IF (VTK_WRAP_JAVA AND VTKEMATLASBRAINCLASSIFIER_WRAP_JAVA)

  VTK_WRAP_JAVA (vtkEMAtlasBrainClassifierJava EMAtlasBrainClassifierJava_SRCS ${LOCAL_MODULE_SRCS})
  ADD_LIBRARY (vtkEMAtlasBrainClassifierJava SHARED ${EMAtlasBrainClassifierJava_SRCS})
  TARGET_LINK_LIBRARIES (vtkEMAtlasBrainClassifierJava 
                         vtkEMAtlasBrainClassifier
                         vtkIOJava
                         vtkGraphicsJava
                         vtkImagingJava 
                         vtkFilteringJava
                         vtkCommonJava)
  IF (VTK_USE_HYBRID)
    TARGET_LINK_LIBRARIES (vtkEMAtlasBrainClassifierJava vtkHybridJava)
  ENDIF (VTK_USE_HYBRID)

  IF (VTK_USE_PARALLEL)
    TARGET_LINK_LIBRARIES (vtkEMAtlasBrainClassifierJava vtkParallelJava)
  ENDIF (VTK_USE_PARALLEL)

  IF (VTK_USE_PATENTED)
    TARGET_LINK_LIBRARIES (vtkEMAtlasBrainClassifierJava vtkPatentedJava)
  ENDIF (VTK_USE_PATENTED)

  IF (VTK_USE_RENDERING)
    TARGET_LINK_LIBRARIES (vtkEMAtlasBrainClassifierJava vtkRenderingJava)
  ENDIF (VTK_USE_RENDERING)

ENDIF (VTK_WRAP_JAVA AND VTKEMATLASBRAINCLASSIFIER_WRAP_JAVA)

#
# Link to VTK and local
#

TARGET_LINK_LIBRARIES (
  vtkEMAtlasBrainClassifier
  vtkIO
  vtkGraphics
  vtkImaging 
  vtkFiltering
  vtkCommon
)

IF (VTK_USE_HYBRID)
  TARGET_LINK_LIBRARIES (vtkEMAtlasBrainClassifier vtkHybrid)
ENDIF (VTK_USE_HYBRID)

IF (VTK_USE_PARALLEL)
  TARGET_LINK_LIBRARIES (vtkEMAtlasBrainClassifier vtkParallel)
ENDIF (VTK_USE_PARALLEL)

IF (VTK_USE_PATENTED)
  TARGET_LINK_LIBRARIES (vtkEMAtlasBrainClassifier vtkPatented)
ENDIF (VTK_USE_PATENTED)

IF (VTK_USE_RENDERING)
  TARGET_LINK_LIBRARIES (vtkEMAtlasBrainClassifier vtkRendering)
ENDIF (VTK_USE_RENDERING)
