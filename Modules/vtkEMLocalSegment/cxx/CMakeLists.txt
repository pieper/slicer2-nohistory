#
# Source files: DO NOT EDIT THIS FILE: edit CMakeListsLocal.txt instead.
#
#

SET (LOCAL_LIBRARY_BASENAME vtkEMLocalSegment)

INCLUDE (${VTKEMLOCALSEGMENT_SOURCE_DIR}/cxx/CMakeListsLocal.txt)

# --------------------------------------------------------------------------
# You probably do not need to modify anything below this line

#
# Create the vtkEMLocalSegment C++ library
#
# (Doesn't work here because of a CMake bug)
# ADD_LIBRARY (vtkEMLocalSegment ${LOCAL_MODULE_SRCS})

#
# Create the vtkEMLocalSegment Tcl library
#

IF (VTK_WRAP_TCL AND VTKEMLOCALSEGMENT_WRAP_TCL)

  VTK_WRAP_TCL (vtkEMLocalSegmentTCL EMLocalSegmentTCL_SRCS ${LOCAL_MODULE_SRCS})
  ADD_LIBRARY (vtkEMLocalSegmentTCL ${EMLocalSegmentTCL_SRCS})
  TARGET_LINK_LIBRARIES (vtkEMLocalSegmentTCL 
                         vtkEMLocalSegment
                         vtkIOTCL 
                         vtkGraphicsTCL 
                         vtkImagingTCL 
                         vtkFilteringTCL 
                         vtkCommonTCL
                         ${TCL_LIBRARY})
  IF (VTK_USE_HYBRID)
    TARGET_LINK_LIBRARIES (vtkEMLocalSegmentTCL vtkHybridTCL)
  ENDIF (VTK_USE_HYBRID)

  IF (VTK_USE_PARALLEL)
    TARGET_LINK_LIBRARIES (vtkEMLocalSegmentTCL vtkParallelTCL)
  ENDIF (VTK_USE_PARALLEL)

  IF (VTK_USE_PATENTED)
    TARGET_LINK_LIBRARIES (vtkEMLocalSegmentTCL vtkPatentedTCL)
  ENDIF (VTK_USE_PATENTED)

  IF (VTK_USE_RENDERING)
    TARGET_LINK_LIBRARIES (vtkEMLocalSegmentTCL vtkRenderingTCL)
  ENDIF (VTK_USE_RENDERING)

ENDIF (VTK_WRAP_TCL AND VTKEMLOCALSEGMENT_WRAP_TCL)

#
# Create the vtkEMLocalSegment Python library
#

IF (VTK_WRAP_PYTHON AND VTKEMLOCALSEGMENT_WRAP_PYTHON)

  VTK_WRAP_PYTHON (vtkEMLocalSegmentPython EMLocalSegmentPython_SRCS ${LOCAL_MODULE_SRCS})

  IF (APPLE)
    ADD_LIBRARY (vtkEMLocalSegmentPython MODULE ${EMLocalSegmentPython_SRCS})
  ELSE (APPLE)
    ADD_LIBRARY (vtkEMLocalSegmentPython SHARED ${EMLocalSegmentPython_SRCS})
  ENDIF (APPLE)

  IF (WIN32)
    TARGET_LINK_LIBRARIES (vtkEMLocalSegmentPython 
                           vtkEMLocalSegment
                           vtkIOPython
                           vtkGraphicsPython
                           vtkImagingPython
                           vtkFilteringPython
                           vtkCommonPython
                           debug ${PYTHON_DEBUG_LIBRARY} 
                           optimized ${PYTHON_LIBRARY})
  ELSE (WIN32)
    TARGET_LINK_LIBRARIES (vtkEMLocalSegmentPython 
                           vtkEMLocalSegmentPython 
                           vtkIOPython
                           vtkGraphicsPython
                           vtkImagingPython
                           vtkFilteringPython
                           vtkCommonPython
                           ${PYTHON_LIBRARY})
  ENDIF (WIN32)

  IF (VTK_USE_HYBRID)
    TARGET_LINK_LIBRARIES (vtkEMLocalSegmentPython vtkHybridPython)
  ENDIF (VTK_USE_HYBRID)

  IF (VTK_USE_PARALLEL)
    TARGET_LINK_LIBRARIES (vtkEMLocalSegmentPython vtkParallelPython)
  ENDIF (VTK_USE_PARALLEL)

  IF (VTK_USE_PATENTED)
    TARGET_LINK_LIBRARIES (vtkEMLocalSegmentPython vtkPatentedPython)
  ENDIF (VTK_USE_PATENTED)

  IF (VTK_USE_RENDERING)
    TARGET_LINK_LIBRARIES (vtkEMLocalSegmentPython vtkRenderingPython)
  ENDIF (VTK_USE_RENDERING)

ENDIF (VTK_WRAP_PYTHON AND VTKEMLOCALSEGMENT_WRAP_PYTHON)

#
# Create the vtkEMLocalSegment Java library
#

IF (VTK_WRAP_JAVA AND VTKEMLOCALSEGMENT_WRAP_JAVA)

  VTK_WRAP_JAVA (vtkEMLocalSegmentJava EMLocalSegmentJava_SRCS ${LOCAL_MODULE_SRCS})
  ADD_LIBRARY (vtkEMLocalSegmentJava SHARED ${EMLocalSegmentJava_SRCS})
  TARGET_LINK_LIBRARIES (vtkEMLocalSegmentJava 
                         vtkEMLocalSegment
                         vtkIOJava
                         vtkGraphicsJava
                         vtkImagingJava 
                         vtkFilteringJava
                         vtkCommonJava)
  IF (VTK_USE_HYBRID)
    TARGET_LINK_LIBRARIES (vtkEMLocalSegmentJava vtkHybridJava)
  ENDIF (VTK_USE_HYBRID)

  IF (VTK_USE_PARALLEL)
    TARGET_LINK_LIBRARIES (vtkEMLocalSegmentJava vtkParallelJava)
  ENDIF (VTK_USE_PARALLEL)

  IF (VTK_USE_PATENTED)
    TARGET_LINK_LIBRARIES (vtkEMLocalSegmentJava vtkPatentedJava)
  ENDIF (VTK_USE_PATENTED)

  IF (VTK_USE_RENDERING)
    TARGET_LINK_LIBRARIES (vtkEMLocalSegmentJava vtkRenderingJava)
  ENDIF (VTK_USE_RENDERING)

ENDIF (VTK_WRAP_JAVA AND VTKEMLOCALSEGMENT_WRAP_JAVA)

#
# Link to VTK and local
#

TARGET_LINK_LIBRARIES (
  vtkEMLocalSegment
  vtkIO
  vtkGraphics
  vtkImaging 
  vtkFiltering
  vtkCommon
)

IF (VTK_USE_HYBRID)
  TARGET_LINK_LIBRARIES (vtkEMLocalSegment vtkHybrid)
ENDIF (VTK_USE_HYBRID)

IF (VTK_USE_PARALLEL)
  TARGET_LINK_LIBRARIES (vtkEMLocalSegment vtkParallel)
ENDIF (VTK_USE_PARALLEL)

IF (VTK_USE_PATENTED)
  TARGET_LINK_LIBRARIES (vtkEMLocalSegment vtkPatented)
ENDIF (VTK_USE_PATENTED)

IF (VTK_USE_RENDERING)
  TARGET_LINK_LIBRARIES (vtkEMLocalSegment vtkRendering)
ENDIF (VTK_USE_RENDERING)
