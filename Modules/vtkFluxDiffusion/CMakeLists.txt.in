#
# Set the project name.
#

# MY -> @MODULENAME@
# my -> @Modulename@


PROJECT (VTK@MODULENAME@)

#
# Assume everything is set up correctly for build.
#
# If some requirements are not met, set it to 0.
# In that case, the build won't be done.
#

SET (VTK@MODULENAME@_CAN_BUILD 1)

#
# Load CMake commands that you probably should not modify.
#

INCLUDE (${VTK@MODULENAME@_SOURCE_DIR}/CMakeOptions.cmake)

#
# If everything is OK, then go into the sub directories and build.
#

IF (VTK@MODULENAME@_CAN_BUILD)

  #
  # Here is where you can list the sub-directories holding your local 
  # classes. Sorting classes by 'package' type like VTK does (Common, 
  # Rendering, Filtering, Imaging, IO, etc.) is a good thing and prevents 
  # numerous dependencies problems.
  #

  SUBDIRS (
    cxx
  )

  #
  # You can put your include path(s) here
  #

  INCLUDE_DIRECTORIES (${VTK@MODULENAME@_SOURCE_DIR}/cxx)

  #
  # Build examples too ?
  #

#  OPTION(BUILD_EXAMPLES "Build examples." ON)
#  IF (BUILD_EXAMPLES)
#    SUBDIRS(Examples)
#  ENDIF (BUILD_EXAMPLES)


  #
  # Common configuration settings
  #
  # Do not worry about this one.
  #

  CONFIGURE_FILE(
    ${VTK@MODULENAME@_SOURCE_DIR}/vtk@Modulename@Configure.h.cin 
    ${VTK@MODULENAME@_BINARY_DIR}/vtk@Modulename@Configure.h
  )

  INCLUDE_DIRECTORIES(${VTK@MODULENAME@_BINARY_DIR})

ENDIF (VTK@MODULENAME@_CAN_BUILD)
