#
# Source files: DO NOT EDIT THIS FILE: edit CMakeListsLocal.txt instead.
#
#

SET (LOCAL_LIBRARY_BASENAME vtkImageSmooth)

INCLUDE (${VTKIMAGESMOOTH_SOURCE_DIR}/cxx/CMakeListsLocal.txt)

# --------------------------------------------------------------------------
# You probably do not need to modify anything below this line

#
# Create the vtkImageSmooth C++ library
#
# (Doesn't work here because of a CMake bug)
# ADD_LIBRARY (vtkImageSmooth ${LOCAL_MODULE_SRCS})

#
# Create the vtkImageSmooth Tcl library
#

IF (VTK_WRAP_TCL AND VTKIMAGESMOOTH_WRAP_TCL)

  VTK_WRAP_TCL (vtkImageSmoothTCL ImageSmoothTCL_SRCS ${LOCAL_MODULE_SRCS})
  ADD_LIBRARY (vtkImageSmoothTCL ${ImageSmoothTCL_SRCS})
  TARGET_LINK_LIBRARIES (vtkImageSmoothTCL 
                         vtkImageSmooth
                         vtkIOTCL 
                         vtkGraphicsTCL 
                         vtkImagingTCL 
                         vtkFilteringTCL 
                         vtkCommonTCL
                         ${TCL_LIBRARY})
  IF (VTK_USE_HYBRID)
    TARGET_LINK_LIBRARIES (vtkImageSmoothTCL vtkHybridTCL)
  ENDIF (VTK_USE_HYBRID)

  IF (VTK_USE_PARALLEL)
    TARGET_LINK_LIBRARIES (vtkImageSmoothTCL vtkParallelTCL)
  ENDIF (VTK_USE_PARALLEL)

  IF (VTK_USE_PATENTED)
    TARGET_LINK_LIBRARIES (vtkImageSmoothTCL vtkPatentedTCL)
  ENDIF (VTK_USE_PATENTED)

  IF (VTK_USE_RENDERING)
    TARGET_LINK_LIBRARIES (vtkImageSmoothTCL vtkRenderingTCL)
  ENDIF (VTK_USE_RENDERING)

ENDIF (VTK_WRAP_TCL AND VTKIMAGESMOOTH_WRAP_TCL)

#
# Create the vtkImageSmooth Python library
#

IF (VTK_WRAP_PYTHON AND VTKIMAGESMOOTH_WRAP_PYTHON)

  VTK_WRAP_PYTHON (vtkImageSmoothPython ImageSmoothPython_SRCS ${LOCAL_MODULE_SRCS})

  IF (APPLE)
    ADD_LIBRARY (vtkImageSmoothPython MODULE ${ImageSmoothPython_SRCS})
  ELSE (APPLE)
    ADD_LIBRARY (vtkImageSmoothPython SHARED ${ImageSmoothPython_SRCS})
  ENDIF (APPLE)

  IF (WIN32)
    TARGET_LINK_LIBRARIES (vtkImageSmoothPython 
                           vtkImageSmooth
                           vtkIOPython
                           vtkGraphicsPython
                           vtkImagingPython
                           vtkFilteringPython
                           vtkCommonPython
                           debug ${PYTHON_DEBUG_LIBRARY} 
                           optimized ${PYTHON_LIBRARY})
  ELSE (WIN32)
    TARGET_LINK_LIBRARIES (vtkImageSmoothPython 
                           vtkImageSmoothPython 
                           vtkIOPython
                           vtkGraphicsPython
                           vtkImagingPython
                           vtkFilteringPython
                           vtkCommonPython
                           ${PYTHON_LIBRARY})
  ENDIF (WIN32)

  IF (VTK_USE_HYBRID)
    TARGET_LINK_LIBRARIES (vtkImageSmoothPython vtkHybridPython)
  ENDIF (VTK_USE_HYBRID)

  IF (VTK_USE_PARALLEL)
    TARGET_LINK_LIBRARIES (vtkImageSmoothPython vtkParallelPython)
  ENDIF (VTK_USE_PARALLEL)

  IF (VTK_USE_PATENTED)
    TARGET_LINK_LIBRARIES (vtkImageSmoothPython vtkPatentedPython)
  ENDIF (VTK_USE_PATENTED)

  IF (VTK_USE_RENDERING)
    TARGET_LINK_LIBRARIES (vtkImageSmoothPython vtkRenderingPython)
  ENDIF (VTK_USE_RENDERING)

ENDIF (VTK_WRAP_PYTHON AND VTKIMAGESMOOTH_WRAP_PYTHON)

#
# Create the vtkImageSmooth Java library
#

IF (VTK_WRAP_JAVA AND VTKIMAGESMOOTH_WRAP_JAVA)

  VTK_WRAP_JAVA (vtkImageSmoothJava ImageSmoothJava_SRCS ${LOCAL_MODULE_SRCS})
  ADD_LIBRARY (vtkImageSmoothJava SHARED ${ImageSmoothJava_SRCS})
  TARGET_LINK_LIBRARIES (vtkImageSmoothJava 
                         vtkImageSmooth
                         vtkIOJava
                         vtkGraphicsJava
                         vtkImagingJava 
                         vtkFilteringJava
                         vtkCommonJava)
  IF (VTK_USE_HYBRID)
    TARGET_LINK_LIBRARIES (vtkImageSmoothJava vtkHybridJava)
  ENDIF (VTK_USE_HYBRID)

  IF (VTK_USE_PARALLEL)
    TARGET_LINK_LIBRARIES (vtkImageSmoothJava vtkParallelJava)
  ENDIF (VTK_USE_PARALLEL)

  IF (VTK_USE_PATENTED)
    TARGET_LINK_LIBRARIES (vtkImageSmoothJava vtkPatentedJava)
  ENDIF (VTK_USE_PATENTED)

  IF (VTK_USE_RENDERING)
    TARGET_LINK_LIBRARIES (vtkImageSmoothJava vtkRenderingJava)
  ENDIF (VTK_USE_RENDERING)

ENDIF (VTK_WRAP_JAVA AND VTKIMAGESMOOTH_WRAP_JAVA)

#
# Link to VTK and local
#

TARGET_LINK_LIBRARIES (
  vtkImageSmooth
  vtkIO
  vtkGraphics
  vtkImaging 
  vtkFiltering
  vtkCommon
)

IF (VTK_USE_HYBRID)
  TARGET_LINK_LIBRARIES (vtkImageSmooth vtkHybrid)
ENDIF (VTK_USE_HYBRID)

IF (VTK_USE_PARALLEL)
  TARGET_LINK_LIBRARIES (vtkImageSmooth vtkParallel)
ENDIF (VTK_USE_PARALLEL)

IF (VTK_USE_PATENTED)
  TARGET_LINK_LIBRARIES (vtkImageSmooth vtkPatented)
ENDIF (VTK_USE_PATENTED)

IF (VTK_USE_RENDERING)
  TARGET_LINK_LIBRARIES (vtkImageSmooth vtkRendering)
ENDIF (VTK_USE_RENDERING)
