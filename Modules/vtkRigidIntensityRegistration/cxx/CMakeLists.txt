#
# Source files: DO NOT EDIT THIS FILE: edit CMakeListsLocal.txt instead.
#
#

SET (LOCAL_LIBRARY_BASENAME vtkRigidIntensityRegistration)

INCLUDE (${VTKRIGIDINTENSITYREGISTRATION_SOURCE_DIR}/cxx/CMakeListsLocal.txt)

# --------------------------------------------------------------------------
# You probably do not need to modify anything below this line

#
# Create the vtkRigidIntensityRegistration C++ library
#
# (Doesn't work here because of a CMake bug)
# ADD_LIBRARY (vtkRigidIntensityRegistration ${LOCAL_MODULE_SRCS})

#
# Create the vtkRigidIntensityRegistration Tcl library
#

IF (VTK_WRAP_TCL AND VTKRIGIDINTENSITYREGISTRATION_WRAP_TCL)

  VTK_WRAP_TCL (vtkRigidIntensityRegistrationTCL RigidIntensityRegistrationTCL_SRCS ${LOCAL_MODULE_SRCS})
  ADD_LIBRARY (vtkRigidIntensityRegistrationTCL ${RigidIntensityRegistrationTCL_SRCS})
  TARGET_LINK_LIBRARIES (vtkRigidIntensityRegistrationTCL 
                         vtkRigidIntensityRegistration
                         vtkIOTCL 
                         vtkGraphicsTCL 
                         vtkImagingTCL 
                         vtkFilteringTCL 
                         vtkCommonTCL
                         ${TCL_LIBRARY})
  IF (VTK_USE_HYBRID)
    TARGET_LINK_LIBRARIES (vtkRigidIntensityRegistrationTCL vtkHybridTCL)
  ENDIF (VTK_USE_HYBRID)

  IF (VTK_USE_PARALLEL)
    TARGET_LINK_LIBRARIES (vtkRigidIntensityRegistrationTCL vtkParallelTCL)
  ENDIF (VTK_USE_PARALLEL)

  IF (VTK_USE_PATENTED)
    TARGET_LINK_LIBRARIES (vtkRigidIntensityRegistrationTCL vtkPatentedTCL)
  ENDIF (VTK_USE_PATENTED)

  IF (VTK_USE_RENDERING)
    TARGET_LINK_LIBRARIES (vtkRigidIntensityRegistrationTCL vtkRenderingTCL)
  ENDIF (VTK_USE_RENDERING)

ENDIF (VTK_WRAP_TCL AND VTKRIGIDINTENSITYREGISTRATION_WRAP_TCL)

#
# Create the vtkRigidIntensityRegistration Python library
#

IF (VTK_WRAP_PYTHON AND VTKRIGIDINTENSITYREGISTRATION_WRAP_PYTHON)

  VTK_WRAP_PYTHON (vtkRigidIntensityRegistrationPython RigidIntensityRegistrationPython_SRCS ${LOCAL_MODULE_SRCS})

  IF (APPLE)
    ADD_LIBRARY (vtkRigidIntensityRegistrationPython MODULE ${RigidIntensityRegistrationPython_SRCS})
  ELSE (APPLE)
    ADD_LIBRARY (vtkRigidIntensityRegistrationPython SHARED ${RigidIntensityRegistrationPython_SRCS})
  ENDIF (APPLE)

  IF (WIN32)
    TARGET_LINK_LIBRARIES (vtkRigidIntensityRegistrationPython 
                           vtkRigidIntensityRegistration
                           vtkIOPython
                           vtkGraphicsPython
                           vtkImagingPython
                           vtkFilteringPython
                           vtkCommonPython
                           debug ${PYTHON_DEBUG_LIBRARY} 
                           optimized ${PYTHON_LIBRARY})
  ELSE (WIN32)
    TARGET_LINK_LIBRARIES (vtkRigidIntensityRegistrationPython 
                           vtkRigidIntensityRegistrationPython 
                           vtkIOPython
                           vtkGraphicsPython
                           vtkImagingPython
                           vtkFilteringPython
                           vtkCommonPython
                           ${PYTHON_LIBRARY})
  ENDIF (WIN32)

  IF (VTK_USE_HYBRID)
    TARGET_LINK_LIBRARIES (vtkRigidIntensityRegistrationPython vtkHybridPython)
  ENDIF (VTK_USE_HYBRID)

  IF (VTK_USE_PARALLEL)
    TARGET_LINK_LIBRARIES (vtkRigidIntensityRegistrationPython vtkParallelPython)
  ENDIF (VTK_USE_PARALLEL)

  IF (VTK_USE_PATENTED)
    TARGET_LINK_LIBRARIES (vtkRigidIntensityRegistrationPython vtkPatentedPython)
  ENDIF (VTK_USE_PATENTED)

  IF (VTK_USE_RENDERING)
    TARGET_LINK_LIBRARIES (vtkRigidIntensityRegistrationPython vtkRenderingPython)
  ENDIF (VTK_USE_RENDERING)

ENDIF (VTK_WRAP_PYTHON AND VTKRIGIDINTENSITYREGISTRATION_WRAP_PYTHON)

#
# Create the vtkRigidIntensityRegistration Java library
#

IF (VTK_WRAP_JAVA AND VTKRIGIDINTENSITYREGISTRATION_WRAP_JAVA)

  VTK_WRAP_JAVA (vtkRigidIntensityRegistrationJava RigidIntensityRegistrationJava_SRCS ${LOCAL_MODULE_SRCS})
  ADD_LIBRARY (vtkRigidIntensityRegistrationJava SHARED ${RigidIntensityRegistrationJava_SRCS})
  TARGET_LINK_LIBRARIES (vtkRigidIntensityRegistrationJava 
                         vtkRigidIntensityRegistration
                         vtkIOJava
                         vtkGraphicsJava
                         vtkImagingJava 
                         vtkFilteringJava
                         vtkCommonJava)
  IF (VTK_USE_HYBRID)
    TARGET_LINK_LIBRARIES (vtkRigidIntensityRegistrationJava vtkHybridJava)
  ENDIF (VTK_USE_HYBRID)

  IF (VTK_USE_PARALLEL)
    TARGET_LINK_LIBRARIES (vtkRigidIntensityRegistrationJava vtkParallelJava)
  ENDIF (VTK_USE_PARALLEL)

  IF (VTK_USE_PATENTED)
    TARGET_LINK_LIBRARIES (vtkRigidIntensityRegistrationJava vtkPatentedJava)
  ENDIF (VTK_USE_PATENTED)

  IF (VTK_USE_RENDERING)
    TARGET_LINK_LIBRARIES (vtkRigidIntensityRegistrationJava vtkRenderingJava)
  ENDIF (VTK_USE_RENDERING)

ENDIF (VTK_WRAP_JAVA AND VTKRIGIDINTENSITYREGISTRATION_WRAP_JAVA)

#
# Link to VTK and local
#

TARGET_LINK_LIBRARIES (
  vtkRigidIntensityRegistration
  vtkIO
  vtkGraphics
  vtkImaging 
  vtkFiltering
  vtkCommon
)

IF (VTK_USE_HYBRID)
  TARGET_LINK_LIBRARIES (vtkRigidIntensityRegistration vtkHybrid)
ENDIF (VTK_USE_HYBRID)

IF (VTK_USE_PARALLEL)
  TARGET_LINK_LIBRARIES (vtkRigidIntensityRegistration vtkParallel)
ENDIF (VTK_USE_PARALLEL)

IF (VTK_USE_PATENTED)
  TARGET_LINK_LIBRARIES (vtkRigidIntensityRegistration vtkPatented)
ENDIF (VTK_USE_PATENTED)

IF (VTK_USE_RENDERING)
  TARGET_LINK_LIBRARIES (vtkRigidIntensityRegistration vtkRendering)
ENDIF (VTK_USE_RENDERING)
