# Find ITK
INCLUDE (${CMAKE_ROOT}/Modules/FindITK.cmake)

# Use ITK.  This sets up include/link directories for us.
IF (USE_ITK_FILE)
  INCLUDE(${USE_ITK_FILE})
ENDIF(USE_ITK_FILE)


SET( LOCAL_MODULE_SRCS
 vtkITKRigidRegistrationTransformBase.cxx
    ${VTKRIGIDINTENSITYREGISTRATION_SOURCE_DIR}/MutualInformation/vtkITKMutualInformationTransform.cxx
    ${VTKRIGIDINTENSITYREGISTRATION_SOURCE_DIR}/KullbackLeibler/vtkITKKullbackLeiblerTransform.cxx
)

SET_SOURCE_FILES_PROPERTIES (
vtkITKRigidRegistrationTransformBase.cxx
ABSTRACT
)

SET ( LOCAL_NO_WRAP_SRC
 NewStoppingCondition.cxx
 itkGradientDescentOptimizerWithStopCondition.cxx
 itkQuaternionRigidTransformGradientDescentOptimizerModified.cxx
)

#### if you code depends on SlicerBase, uncomment the 
#### INCLUDE_DIRECTORIES and LINK_LIBRARIES
#### lines below
####
INCLUDE_DIRECTORIES( 
   ${VTKSLICERBASE_SOURCE_DIR}/cxx 
   ${VTKSLICERBASE_SOURCE_DIR}/MutualInformation
   ${VTKSLICERBASE_SOURCE_DIR}/KullbackLeibler
   ${VTKSLICERBASE_BUILD_DIR}
)
#LINK_LIBRARIES (${VTKSLICERBASE_BUILD_LIB})

## You can add additional include paths here
#INCLUDE_DIRECTORIES(
#)


# To add a list of additional libraries you need to link with, uncomment
# the following line.  The library names should omit the "lib" and any
# trailing suffix.
# LINK_LIBRARIES (${LOCAL_LIBRARY_BASENAME} library_names_here)


# Here's the rule to create the implementation C++ library.
# It should happen in the CMakeLists.txt file that includes this one,
# but because of a CMake bug that doesn't work.
#

ADD_LIBRARY (${LOCAL_LIBRARY_BASENAME} ${LOCAL_MODULE_SRCS} 
            ${LOCAL_NO_WRAP_SRC})

# Add additional directories to look in for libraries
LINK_DIRECTORIES(
#${VTKMYCLASS_SOURCE_DIR}/lib
)

TARGET_LINK_LIBRARIES (
${LOCAL_LIBRARY_BASENAME}
ITKAlgorithms
ITKNumerics 
ITKCommon
ITKBasicFilters
ITKNumerics
ITKBasicFilters
)

