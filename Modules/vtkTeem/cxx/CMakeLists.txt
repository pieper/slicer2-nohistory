#
# Source files: DO NOT EDIT THIS FILE: edit CMakeListsLocal.txt instead.
#
#

SET (LOCAL_LIBRARY_BASENAME vtkTeem)

INCLUDE (${VTKTEEM_SOURCE_DIR}/cxx/CMakeListsLocal.txt)

# --------------------------------------------------------------------------
# You probably do not need to modify anything below this line

#
# Create the vtkTeem C++ library
#
# (Doesn't work here because of a CMake bug)
# ADD_LIBRARY (vtkTeem ${LOCAL_MODULE_SRCS})

#
# Create the vtkTeem Tcl library
#

IF (VTK_WRAP_TCL AND VTKTEEM_WRAP_TCL)

  VTK_WRAP_TCL (vtkTeemTCL TeemTCL_SRCS ${LOCAL_MODULE_SRCS})
  ADD_LIBRARY (vtkTeemTCL ${TeemTCL_SRCS})
  TARGET_LINK_LIBRARIES (vtkTeemTCL 
                         vtkTeem
                         vtkIOTCL 
                         vtkGraphicsTCL 
                         vtkImagingTCL 
                         vtkFilteringTCL 
                         vtkCommonTCL
                         ${TCL_LIBRARY})
  IF (VTK_USE_HYBRID)
    TARGET_LINK_LIBRARIES (vtkTeemTCL vtkHybridTCL)
  ENDIF (VTK_USE_HYBRID)

  IF (VTK_USE_PARALLEL)
    TARGET_LINK_LIBRARIES (vtkTeemTCL vtkParallelTCL)
  ENDIF (VTK_USE_PARALLEL)

  IF (VTK_USE_PATENTED)
    TARGET_LINK_LIBRARIES (vtkTeemTCL vtkPatentedTCL)
  ENDIF (VTK_USE_PATENTED)

  IF (VTK_USE_RENDERING)
    TARGET_LINK_LIBRARIES (vtkTeemTCL vtkRenderingTCL)
  ENDIF (VTK_USE_RENDERING)

ENDIF (VTK_WRAP_TCL AND VTKTEEM_WRAP_TCL)

#
# Create the vtkTeem Python library
#

IF (VTK_WRAP_PYTHON AND VTKTEEM_WRAP_PYTHON)

  VTK_WRAP_PYTHON (vtkTeemPython TeemPython_SRCS ${LOCAL_MODULE_SRCS})

  IF (APPLE)
    ADD_LIBRARY (vtkTeemPython MODULE ${TeemPython_SRCS})
  ELSE (APPLE)
    ADD_LIBRARY (vtkTeemPython SHARED ${TeemPython_SRCS})
  ENDIF (APPLE)

  IF (WIN32)
    TARGET_LINK_LIBRARIES (vtkTeemPython 
                           vtkTeem
                           vtkIOPython
                           vtkGraphicsPython
                           vtkImagingPython
                           vtkFilteringPython
                           vtkCommonPython
                           debug ${PYTHON_DEBUG_LIBRARY} 
                           optimized ${PYTHON_LIBRARY})
  ELSE (WIN32)
    TARGET_LINK_LIBRARIES (vtkTeemPython 
                           vtkTeemPython 
                           vtkIOPython
                           vtkGraphicsPython
                           vtkImagingPython
                           vtkFilteringPython
                           vtkCommonPython
                           ${PYTHON_LIBRARY})
  ENDIF (WIN32)

  IF (VTK_USE_HYBRID)
    TARGET_LINK_LIBRARIES (vtkTeemPython vtkHybridPython)
  ENDIF (VTK_USE_HYBRID)

  IF (VTK_USE_PARALLEL)
    TARGET_LINK_LIBRARIES (vtkTeemPython vtkParallelPython)
  ENDIF (VTK_USE_PARALLEL)

  IF (VTK_USE_PATENTED)
    TARGET_LINK_LIBRARIES (vtkTeemPython vtkPatentedPython)
  ENDIF (VTK_USE_PATENTED)

  IF (VTK_USE_RENDERING)
    TARGET_LINK_LIBRARIES (vtkTeemPython vtkRenderingPython)
  ENDIF (VTK_USE_RENDERING)

ENDIF (VTK_WRAP_PYTHON AND VTKTEEM_WRAP_PYTHON)

#
# Create the vtkTeem Java library
#

IF (VTK_WRAP_JAVA AND VTKTEEM_WRAP_JAVA)

  VTK_WRAP_JAVA (vtkTeemJava TeemJava_SRCS ${LOCAL_MODULE_SRCS})
  ADD_LIBRARY (vtkTeemJava SHARED ${TeemJava_SRCS})
  TARGET_LINK_LIBRARIES (vtkTeemJava 
                         vtkTeem
                         vtkIOJava
                         vtkGraphicsJava
                         vtkImagingJava 
                         vtkFilteringJava
                         vtkCommonJava)
  IF (VTK_USE_HYBRID)
    TARGET_LINK_LIBRARIES (vtkTeemJava vtkHybridJava)
  ENDIF (VTK_USE_HYBRID)

  IF (VTK_USE_PARALLEL)
    TARGET_LINK_LIBRARIES (vtkTeemJava vtkParallelJava)
  ENDIF (VTK_USE_PARALLEL)

  IF (VTK_USE_PATENTED)
    TARGET_LINK_LIBRARIES (vtkTeemJava vtkPatentedJava)
  ENDIF (VTK_USE_PATENTED)

  IF (VTK_USE_RENDERING)
    TARGET_LINK_LIBRARIES (vtkTeemJava vtkRenderingJava)
  ENDIF (VTK_USE_RENDERING)

ENDIF (VTK_WRAP_JAVA AND VTKTEEM_WRAP_JAVA)

#
# Link to VTK and local
#

TARGET_LINK_LIBRARIES (
  vtkTeem
  vtkIO
  vtkGraphics
  vtkImaging 
  vtkFiltering
  vtkCommon
  vtkzlib
  nrrd
)

IF (VTK_USE_HYBRID)
  TARGET_LINK_LIBRARIES (vtkTeem vtkHybrid)
ENDIF (VTK_USE_HYBRID)

IF (VTK_USE_PARALLEL)
  TARGET_LINK_LIBRARIES (vtkTeem vtkParallel)
ENDIF (VTK_USE_PARALLEL)

IF (VTK_USE_PATENTED)
  TARGET_LINK_LIBRARIES (vtkTeem vtkPatented)
ENDIF (VTK_USE_PATENTED)

IF (VTK_USE_RENDERING)
  TARGET_LINK_LIBRARIES (vtkTeem vtkRendering)
ENDIF (VTK_USE_RENDERING)
