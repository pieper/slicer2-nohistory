# CMakeListsLocal.txt sample file.
# Copy it to CMakeListsLocal.txt and edit to match your files.

# Find ITK
INCLUDE (${CMAKE_ROOT}/Modules/FindITK.cmake)

# Use ITK.  This sets up include/link directories for us.
IF (USE_ITK_FILE)
  INCLUDE(${USE_ITK_FILE})
ENDIF(USE_ITK_FILE)


# The names of the source files for your module go here. Include
# abstract files noted below in this list too. Do not include file
# suffixes.

#
# Change all 'MyClass' to appropriate source file name 
# and 'MYCLASS' to your module name (all CAPS)
#

# note: - SET replaced SOURCE_FILES for cmake 1.6
SET(LOCAL_MODULE_SRCS
vtkPreciseHyperStreamlinePoints.cxx
vtkPreciseHyperStreamline.cxx
vtkTensorImplicitFunctionToFunctionSet.cxx
vtkBSplineInterpolateImageFunction.cxx
vtkImageGetTensorComponents.cxx
vtkImageSetTensorComponents.cxx
vtkInteractiveTensorGlyph.cxx
vtkTensorMask.cxx
vtkTensorMathematics.cxx
vtkVectorToOuterProductDualBasis.cxx
vtkHyperStreamlineDTMRI.cxx
vtkSuperquadricTensorGlyph.cxx
vtkSuperquadricSource2.cxx
vtkTensorFlip.cxx
vtkTractographyPointAndArray.cxx
vtkHyperStreamlineTeem.cxx
)

SET_SOURCE_FILES_PROPERTIES(
vtkTractographyPointAndArray
PROPERTIES
WRAP_EXCLUDE TRUE
)

## classes that one does not want tcl wrapped
#SET ( LOCAL_NO_WRAP_SRCS
#vtkMyClassNoWrap.cxx
#)


# Place names of abstract class implementations here. No file suffixes.
# Comment this out if there are no abstracts.

# replaced ABSTRACT_FILES from cmake before 1.6
#SET_SOURCE_FILES_PROPERTIES (
#vtkMyAbstractClass1.cxx
#ABSTRACT
#)

# You can add additional include paths here
#INCLUDE_DIRECTORIES(
#${VTKTENSORUTIL_SOURCE_DIR}/include
#)

#### if you code depends on SlicerBase, uncomment the 
#### INCLUDE_DIRECTORIES and LINK_LIBRARIES
#### lines below
####
INCLUDE_DIRECTORIES( 
   ${VTKSLICERBASE_SOURCE_DIR}/cxx 
   ${VTKSLICERBASE_BUILD_DIR}
   ${TEEM_BUILD_DIR}/include/
)

LINK_DIRECTORIES(
   ${TEEM_BIN_DIR}
   ${VTK_DIR}/bin
)
   
LINK_LIBRARIES (${VTKSLICERBASE_BUILD_LIB} ${VTKSLICERBASE_BUILD_TCL_LIB}) 


# Add additional directories to look in for libraries
#LINK_DIRECTORIES(
#${VTKMYCLASS_SOURCE_DIR}/lib
#)



# To add a list of additional libraries you need to link with, uncomment
# the following line.  The library names should omit the "lib" and any
# trailing suffix.
# LINK_LIBRARIES (${LOCAL_LIBRARY_BASENAME} library_names_here)

# Here's the rule to create the implementation C++ library.
# It should happen in the CMakeLists.txt file that includes this one,
# but because of a CMake bug that doesn't work.
#
ADD_LIBRARY (${LOCAL_LIBRARY_BASENAME} ${LOCAL_MODULE_SRCS})

TARGET_LINK_LIBRARIES (
${LOCAL_LIBRARY_BASENAME}
ITKNumerics
ITKCommon
${TEEM_BUILD_LIB}
vtkIOTCL 
vtkGraphicsTCL 
vtkImagingTCL 
vtkFilteringTCL 
vtkCommonTCL
)

IF (VTK_USE_HYBRID)
    TARGET_LINK_LIBRARIES (${LOCAL_LIBRARY_BASENAME} vtkHybridTCL)
ENDIF (VTK_USE_HYBRID)

IF (VTK_USE_PARALLEL)
    TARGET_LINK_LIBRARIES (${LOCAL_LIBRARY_BASENAME} vtkParallelTCL)
ENDIF (VTK_USE_PARALLEL)

IF (VTK_USE_PATENTED)
    TARGET_LINK_LIBRARIES (${LOCAL_LIBRARY_BASENAME} vtkPatentedTCL)
ENDIF (VTK_USE_PATENTED)

IF (VTK_USE_RENDERING)
    TARGET_LINK_LIBRARIES (${LOCAL_LIBRARY_BASENAME} vtkRenderingTCL)
ENDIF (VTK_USE_RENDERING)

#ADD_LIBRARY (${LOCAL_LIBRARY_BASENAME} ${LOCAL_MODULE_SRCS})

